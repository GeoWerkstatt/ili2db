language: java

jdk:
  - openjdk8
  
branches:
  only:
    - master
    - stable

services:
  - docker
  - mysql
  
addons:
  postgresql: "9.6"
  apt:
    packages:
    - libmaven-ant-tasks-java
    - python3
    - python3-pip
    - postgresql-9.6-postgis-2.4
#    - python3-docutils    
    
install: true

before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker run --name=mssql-test -e 'ACCEPT_EULA=Y' -e 'MSSQL_SA_PASSWORD=MsInst2019x' -p 1433:1433 -d microsoft/mssql-server-linux
    - # localhost is "-S ."
    - sleep 15; docker exec -it mssql-test  /opt/mssql-tools/bin/sqlcmd -S . -U sa -P MsInst2019x -Q 'SELECT @@VERSION;'
    - docker exec -it mssql-test  /opt/mssql-tools/bin/sqlcmd -S . -U sa -P MsInst2019x -Q 'create database ili2db;'
    - mysql -u root --password="" -e 'SHOW VARIABLES LIKE "%version%";'
    - psql -c 'create database ili2db;' -U postgres
    - psql -c 'select version();' -d ili2db -U postgres
    - psql -c 'create extension postgis;' -d ili2db -U postgres
    - psql -c 'create extension "uuid-ossp";' -d ili2db -U postgres
    - psql -c 'select postgis_full_version();' -d ili2db -U postgres
    - # dpkg-query -L python3-docutils
    - python3 --version
    - # python3 -m pip install docutils # results in permission denied
    - # virtualenv my_py3 --python=/usr/bin/python3
    - virtualenv -p python3 my_py3
    - source my_py3/bin/activate # to activate the python3 environemt    
    - python -m pip install docutils # use my_py3
    - python -m pip freeze
    - 
script: 
  - # ant -f build-ili2pg.xml jar
  - gradle jar test 
  - gradle ili2mysqlJar ili2mysqlTest -Dmyurl=jdbc:mysql:///ili2db?useSSL=false -Dmyusr=root
  - gradle ili2pgJar ili2pgTest -Ddburl=jdbc:postgresql:ili2db -Ddbusr=postgres
  - gradle ili2gpkgJar ili2gpkgTest
  - gradle ili2fgdbJar
  - gradle ili2mssqlJar ili2mssqlTest "-Ddburl=jdbc:sqlserver://localhost;databaseName=ili2db" -Ddbusr=sa -Ddbpwd=MsInst2019x
  - # gradle ili2oraJar ili2oraTest
  - gradle -Drst2html=`which rst2html.py` usrdoc testreport ili2mysqlBindist ili2pgBindist ili2fgdbBindist ili2mssqlBindist ili2oraBindist
after_failure:
  - cat build/junitreport/junit-noframes.html && sleep 10
deploy:
  - provider: script
    skip_cleanup: true
    script: ssh-keyscan -H ftp.interlis.ch >> ~/.ssh/known_hosts;gradle -Drst2html=`which rst2html.py` -Drepos_pwd=${repos_pwd} -Drepos_usr=jql_jars-INTE uploadArchives
    on:
      branch: master
  - provider: script
    skip_cleanup: true
    script: ssh-keyscan -H ftp.interlis.ch >> ~/.ssh/known_hosts;gradle -Drst2html=`which rst2html.py` -Drepos_pwd=${repos_pwd} -Drepos_usr=jql_jars-INTE '-Drelease=' -Ddownloads_pwd=${downloads_pwd} -Ddownloads_usr=jql_downloads uploadArchives uploadBin
    on:
      branch: stable
notifications:
  email:
    on_success: change # default: change
    on_failure: always # default: always